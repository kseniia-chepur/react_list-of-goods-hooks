{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","default","sortOrder","setSortOrder","reverseDirection","setReverseDirection","goodsListed","goods","goodsForListing","sort","a","b","by_alphabet","localeCompare","by_length","length","reverse","getListOfGoods","className","onClick","type","cn","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBYA,E,0EAbCC,EAA2B,CACtC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUD,O,qBAAAA,I,6BAAAA,I,0BAAAA,M,KAiCL,IAAME,EAAgB,WAC3B,MAAkCC,mBAASH,EAASI,SAApD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgDH,oBAAS,GAAzD,mBAAOI,EAAP,KAAyBC,EAAzB,KACMC,EA9BR,SACEC,EACAL,EACAE,GAGA,IAAMI,EAAe,YAAOD,GAkB5B,OAhBIL,GACFM,EAAgBC,MAAK,SAACC,EAAGC,GACvB,OAAQT,GACN,KAAKL,EAASe,YACZ,OAAOF,EAAEG,cAAcF,GACzB,KAAKd,EAASiB,UACZ,OAAOJ,EAAEK,OAASJ,EAAEI,OACtB,QAAS,OAAO,MAKlBX,GACFI,EAAgBQ,UAGXR,EAOHS,CAAenB,EAAiBI,EAAWE,GAO/C,OACE,sBAAKc,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMhB,EAAaN,EAASe,cACrCQ,KAAK,SACLF,UAAWG,IACT,SAAU,UACV,CAAE,WAAYnB,IAAcL,EAASe,cALzC,iCAWA,wBACEO,QAAS,kBAAMhB,EAAaN,EAASiB,YACrCM,KAAK,SACLF,UAAWG,IACT,SAAU,aACV,CAAE,WAAYnB,IAAcL,EAASiB,YALzC,4BAWA,wBACEK,QAAS,kBAAMd,GAAqBD,IACpCgB,KAAK,SACLF,UAAWG,IACT,SAAU,aACV,CAAE,YAAiC,IAArBjB,IALlB,sBAWEF,GAAaE,IAEf,wBACEe,QA5CM,WACZhB,EAAaN,EAASI,SACtBI,GAAoB,IA2Cde,KAAK,SACLF,UAAWG,IACT,SAAU,YACV,CAAE,YAAanB,IAAcE,IALjC,sBAaF,6BACGE,EAAYgB,KAAI,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YC/GzDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f9231730.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer:string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortType {\n  default,\n  by_alphabet,\n  by_length,\n}\n\nfunction getListOfGoods(\n  goods:string[],\n  sortOrder:SortType,\n  reverseDirection:boolean,\n)\n  :string[] {\n  const goodsForListing = [...goods];\n\n  if (sortOrder) {\n    goodsForListing.sort((a, b) => {\n      switch (sortOrder) {\n        case SortType.by_alphabet:\n          return a.localeCompare(b);\n        case SortType.by_length:\n          return a.length - b.length;\n        default: return 0;\n      }\n    });\n  }\n\n  if (reverseDirection) {\n    goodsForListing.reverse();\n  }\n\n  return goodsForListing;\n}\n\nexport const App: React.FC = () => {\n  const [sortOrder, setSortOrder] = useState(SortType.default);\n  const [reverseDirection, setReverseDirection] = useState(false);\n  const goodsListed\n    = getListOfGoods(goodsFromServer, sortOrder, reverseDirection);\n\n  const reset = () => {\n    setSortOrder(SortType.default);\n    setReverseDirection(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortOrder(SortType.by_alphabet)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-info',\n            { 'is-light': sortOrder !== SortType.by_alphabet },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortOrder(SortType.by_length)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-success',\n            { 'is-light': sortOrder !== SortType.by_length },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverseDirection(!reverseDirection)}\n          type=\"button\"\n          className={cn(\n            'button', 'is-warning',\n            { 'is-light': reverseDirection === false },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortOrder || reverseDirection)\n      && (\n        <button\n          onClick={reset}\n          type=\"button\"\n          className={cn(\n            'button', 'is-danger',\n            { 'is-light': !sortOrder && !reverseDirection },\n          )}\n        >\n          Reset\n        </button>\n      )}\n      </div>\n\n      <ul>\n        {goodsListed.map(item => <li data-cy=\"Good\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}